#!/usr/bin/env bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/.."

# CREATE PROJECT
if [ "$1" = "cli" ]; then
  npx react-native init $2
  cd $2
  git init .
elif [ "$1" = "expo" ]; then
  expo init -t blank --yarn --name $2 $2
  cd $2
else
  echo "Unknown project type; enter one of: cli, expo"
  exit 1
fi
git add .
git commit -m "Create react native app with $1"

# PREVENT PACKAGE LOCK
cp "${DIR}/template/.npmrc" .npmrc
git add .
git commit -m "Prevent package lock"

# JEST
if [ "$1" = "expo" ]; then
  yarn add --dev jest-expo react-test-renderer babel-jest
  npm set-script test "jest"
  git add .
  git commit -m "Add Jest"
fi

# RNTL
yarn add --dev @testing-library/react-native @testing-library/jest-native
git add .
git commit -m "Add RNTL and jest-native"

# ESLINT AND PRETTIER TOOLS
if [ "$1" = "expo" ]; then
  yarn add --dev @react-native-community/eslint-config \
                 eslint
  cp "${DIR}/template/.prettierrc.js" .prettierrc.js
  npm set-script lint "eslint \"**/*.js\""
  git commit -m "Set up ESLint and Prettier"
fi

# ESLINT CONFIG
yarn add --dev eslint-plugin-import
cp "${DIR}/template/.eslintrc.js" .eslintrc.js
git add .
git commit -m "Configure ESLint"

# README
if [ "$1" = "cli" ]; then
  cp "${DIR}/template/README.cli.md" README.md
fi
if [ "$1" = "expo" ]; then
  cp "${DIR}/template/README.expo.md" README.md
fi
git add .
git commit -m "Add default README"

# SAMPLE APP COMPONENT
cp "${DIR}/template/App.js" App.js
git add .
git commit -m "Add app component"

# SAMPLE TEST
if [ "$1" = "cli" ]; then
  rm __tests__/*
fi
if [ "$1" = "expo" ]; then
  mkdir __tests__
fi
cp "${DIR}/template/__tests__/App.spec.js" __tests__/App.spec.js
git add .
git commit -m "Add sample test"
